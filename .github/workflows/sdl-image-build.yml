name: Build SDL_image

on:
  workflow_dispatch:

env:
  IMAGE_VERSION: 3.2.0

jobs:
  build-windows:
    name: Download Windows
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
          arch: [x64, x86, arm64]
    steps:
      - name: Download release build
        run: wget https://github.com/libsdl-org/SDL_image/releases/download/release-${{ env.IMAGE_VERSION }}/SDL3_image-${{ env.IMAGE_VERSION }}-win32-${{ matrix.arch }}.zip
      - name: Upload Build
        uses: actions/upload-artifact@v4
        with: 
            name: sdl-image-windows-${{ matrix.arch }}
            path: SDL3_image-${{ env.IMAGE_VERSION }}-win32-${{ matrix.arch }}.zip

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    container: registry.gitlab.steamos.cloud/steamrt/sniper/sdk:beta
    defaults:
      run:
        working-directory: SDL_image
    steps:
      - name: Set up Ninja
        uses: aseprite/get-ninja@main
      - name: Set up SDL
        uses: libsdl-org/setup-sdl@main
        id: sdl
        with:
          cmake-generator: Ninja
          version: 3-head
          shell: sh
      - name: Set up Linux dependencies
        working-directory: .
        run: |
          sudo apt-get update
          sudo apt-get -y install \
          libavif-dev \
          libjpeg-dev \
          libpng-dev \
          libtiff-dev \
          libwebp-dev \
          zlib1g-dev \
          ${NULL+}
      - name: Set up NASM
        uses: ilammy/setup-nasm@v1
      - name: Clone SDL_image
        working-directory: .
        run: git clone --recurse-submodules --branch release-${{ env.IMAGE_VERSION }} https://github.com/libsdl-org/SDL_image.git
      - name: Check that versioning is consistent
        # We only need to run this once: arbitrarily use the Linux build
        run: ./build-scripts/test-versioning.sh
      - name: Configure
        run: >
          cmake -G Ninja
          -DBUILD_SHARED_LIBS=ON
          -DCMAKE_BUILD_TYPE=Release
          -DSDL_SHARED=ON
          -DSDL_STATIC=OFF
          -DSDL_DISABLE_INSTALL=ON
          -DSDL_DISABLE_INSTALL_DOCS=ON
          -DSDLIMAGE_TESTS=OFF
          -DSDLIMAGE_TESTS_INSTALL=OFF
          -DSDLIMAGE_SAMPLES=OFF
          -DSDLIMAGE_INSTALL_MAN=OFF
          -DSDLIMAGE_VENDORED=ON
          -S . -B build
      - name: Build
        run: cmake --build build --config Release
      - name: Upload Build
        uses: actions/upload-artifact@v4
        with: 
            name: sdl-image-linux
            path: SDL_image/build/*.so.0

  build-macos:
    name: Build for Apple (${{ matrix.platform.arch }})
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
          platform:
          - {arch: 'arm64', flags: '-DSDL_CPU_ARM64=ON'}
          - {arch: 'x86_64', flags: '-DSDL_CPU_X64=ON'}
    defaults:
      run:
        working-directory: SDL_image
    steps:
      - name: Set up Ninja
        uses: aseprite/get-ninja@main
      - name: Set up SDL
        id: sdl
        uses: libsdl-org/setup-sdl@main
        with:
          cmake-generator: Ninja
          cmake-arguments: |
            -DCMAKE_OSX_ARCHITECTURES="${{ matrix.platform.arch }}" \
            -DSDL_DISABLE_INSTALL_DOCS=ON \
            -DSDL_INSTALL_TESTS=OFF \
            ${{ matrix.platform.flags }}
          version: 3-head
          shell: sh
      - name: Setup MacOS dependencies
        working-directory: .
        run: |
          brew install \
          jpeg-xl \
          libavif \
          webp \
          ${NULL+}
      - name: Set up NASM
        uses: ilammy/setup-nasm@v1
      - name: Clone SDL_image
        working-directory: .
        run: git clone --recurse-submodules --branch release-${{ env.IMAGE_VERSION }} https://github.com/libsdl-org/SDL_image.git
      - name: Configure
        run: >
          cmake -G Ninja
          -DBUILD_SHARED_LIBS=ON
          -DCMAKE_OSX_ARCHITECTURES="${{ matrix.platform.arch }}"
          -DCMAKE_BUILD_TYPE=Release
          -DSDL_SHARED=ON
          -DSDL_STATIC=OFF
          -DSDLIMAGE_TESTS=OFF
          -DSDLIMAGE_TESTS_INSTALL=OFF
          -DSDLIMAGE_SAMPLES=OFF
          -DSDLIMAGE_INSTALL_MAN=OFF
          -DSDLIMAGE_VENDORED=ON
          ${{ matrix.platform.flags }}
          -S . -B build
      - name: Build
        run: cmake --build build --config Release
      - name: Upload Build
        uses: actions/upload-artifact@v4
        with: 
            name: sdl-image-apple-macOS-${{ matrix.platform.arch }}
            path: SDL_image/build/*
