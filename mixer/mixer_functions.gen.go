package mixer

import sdl "github.com/Zyko0/go-sdl3/sdl"

// Code generated by cmd/ffi2go. DO NOT EDIT.

var (
	// MIX_Version => Get the version of SDL_mixer that is linked against your program.
	//
	//puregogen:library path:windows=mixer.dll path:unix=mixer.so alias=mixer
	//puregogen:function symbol=MIX_Version
	iVersion func() int32

	// MIX_Init => Initialize the SDL_mixer library.
	//
	//puregogen:function symbol=MIX_Init
	iInit func() bool

	// MIX_Quit => Deinitialize the SDL_mixer library.
	//
	//puregogen:function symbol=MIX_Quit
	iQuit func()

	// MIX_GetNumAudioDecoders => Report the number of audio decoders available for use.
	//
	//puregogen:function symbol=MIX_GetNumAudioDecoders
	iGetNumAudioDecoders func() int32

	// MIX_GetAudioDecoder => Report the name of a specific audio decoders.
	//
	//puregogen:function symbol=MIX_GetAudioDecoder
	iGetAudioDecoder func(index int32) string

	// MIX_CreateMixerDevice => Create a mixer that plays sound directly to an audio device.
	//
	//puregogen:function symbol=MIX_CreateMixerDevice
	iCreateMixerDevice func(devid sdl.AudioDeviceID, spec *sdl.AudioSpec) *Mixer

	// MIX_CreateMixer => Create a mixer that generates audio to a memory buffer.
	//
	//puregogen:function symbol=MIX_CreateMixer
	iCreateMixer func(spec *sdl.AudioSpec) *Mixer

	// MIX_DestroyMixer => Free a mixer.
	//
	//puregogen:function symbol=MIX_DestroyMixer
	iDestroyMixer func(mixer *Mixer)

	// MIX_GetMixerProperties => Get the properties associated with a mixer.
	//
	//puregogen:function symbol=MIX_GetMixerProperties
	iGetMixerProperties func(mixer *Mixer) sdl.PropertiesID

	// MIX_GetMixerFormat => Get the audio format a mixer is generating.
	//
	//puregogen:function symbol=MIX_GetMixerFormat
	iGetMixerFormat func(mixer *Mixer, spec *sdl.AudioSpec) bool

	// MIX_LoadAudio_IO => Load audio for playback from an SDL_IOStream.
	//
	//puregogen:function symbol=MIX_LoadAudio_IO
	iLoadAudio_IO func(mixer *Mixer, io *sdl.IOStream, predecode bool, closeio bool) *Audio

	// MIX_LoadAudio => Load audio for playback from a file.
	//
	//puregogen:function symbol=MIX_LoadAudio
	iLoadAudio func(mixer *Mixer, path string, predecode bool) *Audio

	// MIX_LoadAudioWithProperties => Load audio for playback through a collection of properties.
	//
	//puregogen:function symbol=MIX_LoadAudioWithProperties
	iLoadAudioWithProperties func(props sdl.PropertiesID) *Audio

	// MIX_LoadRawAudio_IO => Load raw PCM data from an SDL_IOStream.
	//
	//puregogen:function symbol=MIX_LoadRawAudio_IO
	iLoadRawAudio_IO func(mixer *Mixer, io *sdl.IOStream, spec *sdl.AudioSpec, closeio bool) *Audio

	// MIX_LoadRawAudio => Load raw PCM data from a memory buffer.
	//
	//puregogen:function symbol=MIX_LoadRawAudio
	iLoadRawAudio func(mixer *Mixer, data uintptr, datalen uintptr, spec *sdl.AudioSpec) *Audio

	// MIX_LoadRawAudioNoCopy => Load raw PCM data from a memory buffer without making a copy.
	//
	//puregogen:function symbol=MIX_LoadRawAudioNoCopy
	iLoadRawAudioNoCopy func(mixer *Mixer, data uintptr, datalen uintptr, spec *sdl.AudioSpec, free_when_done bool) *Audio

	// MIX_CreateSineWaveAudio => Create a MIX_Audio that generates a sinewave.
	//
	//puregogen:function symbol=MIX_CreateSineWaveAudio
	iCreateSineWaveAudio func(mixer *Mixer, hz int32, amplitude float32) *Audio

	// MIX_GetAudioProperties => Get the properties associated with a MIX_Audio.
	//
	//puregogen:function symbol=MIX_GetAudioProperties
	iGetAudioProperties func(audio *Audio) sdl.PropertiesID

	// MIX_GetAudioDuration => Get the length of a MIX_Audio's playback in sample frames.
	//
	//puregogen:function symbol=MIX_GetAudioDuration
	iGetAudioDuration func(audio *Audio) int64

	// MIX_GetAudioFormat => Query the initial audio format of a MIX_Audio.
	//
	//puregogen:function symbol=MIX_GetAudioFormat
	iGetAudioFormat func(audio *Audio, spec *sdl.AudioSpec) bool

	// MIX_DestroyAudio => Destroy the specified audio.
	//
	//puregogen:function symbol=MIX_DestroyAudio
	iDestroyAudio func(audio *Audio)

	// MIX_CreateTrack => Create a new track on a mixer.
	//
	//puregogen:function symbol=MIX_CreateTrack
	iCreateTrack func(mixer *Mixer) *Track

	// MIX_DestroyTrack => Destroy the specified track.
	//
	//puregogen:function symbol=MIX_DestroyTrack
	iDestroyTrack func(track *Track)

	// MIX_GetTrackProperties => Get the properties associated with a track.
	//
	//puregogen:function symbol=MIX_GetTrackProperties
	iGetTrackProperties func(track *Track) sdl.PropertiesID

	// MIX_GetTrackMixer => Get the MIX_Mixer that owns a MIX_Track.
	//
	//puregogen:function symbol=MIX_GetTrackMixer
	iGetTrackMixer func(track *Track) *Mixer

	// MIX_SetTrackAudio => Set a MIX_Track's input to a MIX_Audio.
	//
	//puregogen:function symbol=MIX_SetTrackAudio
	iSetTrackAudio func(track *Track, audio *Audio) bool

	// MIX_SetTrackAudioStream => Set a MIX_Track's input to an SDL_AudioStream.
	//
	//puregogen:function symbol=MIX_SetTrackAudioStream
	iSetTrackAudioStream func(track *Track, stream *sdl.AudioStream) bool

	// MIX_SetTrackIOStream => Set a MIX_Track's input to an SDL_IOStream.
	//
	//puregogen:function symbol=MIX_SetTrackIOStream
	iSetTrackIOStream func(track *Track, io *sdl.IOStream, closeio bool) bool

	// MIX_TagTrack => Assign an arbitrary tag to a track.
	//
	//puregogen:function symbol=MIX_TagTrack
	iTagTrack func(track *Track, tag string) bool

	// MIX_UntagTrack => Remove an arbitrary tag from a track.
	//
	//puregogen:function symbol=MIX_UntagTrack
	iUntagTrack func(track *Track, tag string)

	// MIX_SetTrackPlaybackPosition => Seek a playing track to a new position in its input.
	//
	//puregogen:function symbol=MIX_SetTrackPlaybackPosition
	iSetTrackPlaybackPosition func(track *Track, frames uint64) bool

	// MIX_GetTrackPlaybackPosition => Get the current input position of a playing track.
	//
	//puregogen:function symbol=MIX_GetTrackPlaybackPosition
	iGetTrackPlaybackPosition func(track *Track) int64

	// MIX_TrackLooping => Query whether a given track is looping.
	//
	//puregogen:function symbol=MIX_TrackLooping
	iTrackLooping func(track *Track) bool

	// MIX_GetTrackAudio => Query the MIX_Audio assigned to a track.
	//
	//puregogen:function symbol=MIX_GetTrackAudio
	iGetTrackAudio func(track *Track) *Audio

	// MIX_GetTrackAudioStream => Query the SDL_AudioStream assigned to a track.
	//
	//puregogen:function symbol=MIX_GetTrackAudioStream
	iGetTrackAudioStream func(track *Track) *sdl.AudioStream

	// MIX_GetTrackRemaining => Return the number of sample frames remaining to be mixed in a track.
	//
	//puregogen:function symbol=MIX_GetTrackRemaining
	iGetTrackRemaining func(track *Track) int64

	// MIX_TrackMSToFrames => Convert milliseconds to sample frames for a track's current format.
	//
	//puregogen:function symbol=MIX_TrackMSToFrames
	iTrackMSToFrames func(track *Track, ms uint64) uint64

	// MIX_TrackFramesToMS => Convert sample frames for a track's current format to milliseconds.
	//
	//puregogen:function symbol=MIX_TrackFramesToMS
	iTrackFramesToMS func(track *Track, frames uint64) uint64

	// MIX_AudioMSToFrames => Convert milliseconds to sample frames for a MIX_Audio's format.
	//
	//puregogen:function symbol=MIX_AudioMSToFrames
	iAudioMSToFrames func(audio *Audio, ms uint64) uint64

	// MIX_AudioFramesToMS => Convert sample frames for a MIX_Audio's format to milliseconds.
	//
	//puregogen:function symbol=MIX_AudioFramesToMS
	iAudioFramesToMS func(audio *Audio, frames uint64) uint64

	// MIX_MSToFrames => Convert milliseconds to sample frames at a specific sample rate.
	//
	//puregogen:function symbol=MIX_MSToFrames
	iMSToFrames func(sample_rate int32, ms uint64) uint64

	// MIX_FramesToMS => Convert sample frames, at a specific sample rate, to milliseconds.
	//
	//puregogen:function symbol=MIX_FramesToMS
	iFramesToMS func(sample_rate int32, frames uint64) uint64

	// MIX_PlayTrack => Start (or restart) mixing a track for playback.
	//
	//puregogen:function symbol=MIX_PlayTrack
	iPlayTrack func(track *Track, options sdl.PropertiesID) bool

	// MIX_PlayTag => Start (or restart) mixing all tracks with a specific tag for playback.
	//
	//puregogen:function symbol=MIX_PlayTag
	iPlayTag func(mixer *Mixer, tag string, options sdl.PropertiesID) bool

	// MIX_PlayAudio => Play a MIX_Audio from start to finish without any management.
	//
	//puregogen:function symbol=MIX_PlayAudio
	iPlayAudio func(mixer *Mixer, audio *Audio) bool

	// MIX_StopTrack => Halt a currently-playing track, possibly fading out over time.
	//
	//puregogen:function symbol=MIX_StopTrack
	iStopTrack func(track *Track, fade_out_frames int64) bool

	// MIX_StopAllTracks => Halt all currently-playing tracks, possibly fading out over time.
	//
	//puregogen:function symbol=MIX_StopAllTracks
	iStopAllTracks func(mixer *Mixer, fade_out_ms int64) bool

	// MIX_StopTag => Halt all tracks with a specific tag, possibly fading out over time.
	//
	//puregogen:function symbol=MIX_StopTag
	iStopTag func(mixer *Mixer, tag string, fade_out_ms int64) bool

	// MIX_PauseTrack => Pause a currently-playing track.
	//
	//puregogen:function symbol=MIX_PauseTrack
	iPauseTrack func(track *Track) bool

	// MIX_PauseAllTracks => Pause all currently-playing tracks.
	//
	//puregogen:function symbol=MIX_PauseAllTracks
	iPauseAllTracks func(mixer *Mixer) bool

	// MIX_PauseTag => Pause all tracks with a specific tag.
	//
	//puregogen:function symbol=MIX_PauseTag
	iPauseTag func(mixer *Mixer, tag string) bool

	// MIX_ResumeTrack => Resume a currently-paused track.
	//
	//puregogen:function symbol=MIX_ResumeTrack
	iResumeTrack func(track *Track) bool

	// MIX_ResumeAllTracks => Resume all currently-paused tracks.
	//
	//puregogen:function symbol=MIX_ResumeAllTracks
	iResumeAllTracks func(mixer *Mixer) bool

	// MIX_ResumeTag => Resume all tracks with a specific tag.
	//
	//puregogen:function symbol=MIX_ResumeTag
	iResumeTag func(mixer *Mixer, tag string) bool

	// MIX_TrackPlaying => Query if a track is currently playing.
	//
	//puregogen:function symbol=MIX_TrackPlaying
	iTrackPlaying func(track *Track) bool

	// MIX_TrackPaused => Query if a track is currently paused.
	//
	//puregogen:function symbol=MIX_TrackPaused
	iTrackPaused func(track *Track) bool

	// MIX_SetMasterGain => Set a mixer's master gain control.
	//
	//puregogen:function symbol=MIX_SetMasterGain
	iSetMasterGain func(mixer *Mixer, gain float32) bool

	// MIX_GetMasterGain => Get a mixer's master gain control.
	//
	//puregogen:function symbol=MIX_GetMasterGain
	iGetMasterGain func(mixer *Mixer) float32

	// MIX_SetTrackGain => Set a track's gain control.
	//
	//puregogen:function symbol=MIX_SetTrackGain
	iSetTrackGain func(track *Track, gain float32) bool

	// MIX_GetTrackGain => Get a track's gain control.
	//
	//puregogen:function symbol=MIX_GetTrackGain
	iGetTrackGain func(track *Track) float32

	// MIX_SetTagGain => Set the gain control of all tracks with a specific tag.
	//
	//puregogen:function symbol=MIX_SetTagGain
	iSetTagGain func(mixer *Mixer, tag string, gain float32) bool

	// MIX_SetTrackFrequencyRatio => Change the frequency ratio of a track.
	//
	//puregogen:function symbol=MIX_SetTrackFrequencyRatio
	iSetTrackFrequencyRatio func(track *Track, ratio float32) bool

	// MIX_GetTrackFrequencyRatio => Query the frequency ratio of a track.
	//
	//puregogen:function symbol=MIX_GetTrackFrequencyRatio
	iGetTrackFrequencyRatio func(track *Track) float32

	// MIX_SetTrackOutputChannelMap => Set the current output channel map of a track.
	//
	//puregogen:function symbol=MIX_SetTrackOutputChannelMap
	iSetTrackOutputChannelMap func(track *Track, chmap *int32, count int32) bool

	// MIX_SetTrackStereo => Force a track to stereo output, with optionally left/right panning.
	//
	//puregogen:function symbol=MIX_SetTrackStereo
	iSetTrackStereo func(track *Track, gains *StereoGains) bool

	// MIX_SetTrack3DPosition => Set a track's position in 3D space.
	//
	//puregogen:function symbol=MIX_SetTrack3DPosition
	iSetTrack3DPosition func(track *Track, position *Point3D) bool

	// MIX_GetTrack3DPosition => Get a track's current position in 3D space.
	//
	//puregogen:function symbol=MIX_GetTrack3DPosition
	iGetTrack3DPosition func(track *Track, position *Point3D) bool

	// MIX_CreateGroup => Create a mixing group.
	//
	//puregogen:function symbol=MIX_CreateGroup
	iCreateGroup func(mixer *Mixer) *Group

	// MIX_DestroyGroup => Destroy a mixing group.
	//
	//puregogen:function symbol=MIX_DestroyGroup
	iDestroyGroup func(group *Group)

	// MIX_GetGroupProperties => Get the properties associated with a group.
	//
	//puregogen:function symbol=MIX_GetGroupProperties
	iGetGroupProperties func(group *Group) sdl.PropertiesID

	// MIX_GetGroupMixer => Get the MIX_Mixer that owns a MIX_Group.
	//
	//puregogen:function symbol=MIX_GetGroupMixer
	iGetGroupMixer func(group *Group) *Mixer

	// MIX_SetTrackGroup => Assign a track to a mixing group.
	//
	//puregogen:function symbol=MIX_SetTrackGroup
	iSetTrackGroup func(track *Track, group *Group) bool

	// MIX_SetTrackStoppedCallback => Set a callback that fires when a MIX_Track is stopped.
	//
	//puregogen:function symbol=MIX_SetTrackStoppedCallback
	iSetTrackStoppedCallback func(track *Track, cb TrackStoppedCallback, userdata uintptr) bool

	// MIX_SetTrackRawCallback => Set a callback that fires when a MIX_Track has initial decoded audio.
	//
	//puregogen:function symbol=MIX_SetTrackRawCallback
	iSetTrackRawCallback func(track *Track, cb TrackMixCallback, userdata uintptr) bool

	// MIX_SetTrackCookedCallback => Set a callback that fires when the mixer has transformed a track's audio.
	//
	//puregogen:function symbol=MIX_SetTrackCookedCallback
	iSetTrackCookedCallback func(track *Track, cb TrackMixCallback, userdata uintptr) bool

	// MIX_SetGroupPostMixCallback => Set a callback that fires when a mixer group has completed mixing.
	//
	//puregogen:function symbol=MIX_SetGroupPostMixCallback
	iSetGroupPostMixCallback func(group *Group, cb GroupMixCallback, userdata uintptr) bool

	// MIX_SetPostMixCallback => Set a callback that fires when all mixing has completed.
	//
	//puregogen:function symbol=MIX_SetPostMixCallback
	iSetPostMixCallback func(mixer *Mixer, cb PostMixCallback, userdata uintptr) bool

	// MIX_Generate => Generate mixer output when not driving an audio device.
	//
	//puregogen:function symbol=MIX_Generate
	iGenerate func(mixer *Mixer, buffer uintptr, buflen int32) bool

	// MIX_CreateAudioDecoder => Create a MIX_AudioDecoder from a path on the filesystem.
	//
	//puregogen:function symbol=MIX_CreateAudioDecoder
	iCreateAudioDecoder func(path string, props sdl.PropertiesID) *AudioDecoder

	// MIX_CreateAudioDecoder_IO => Create a MIX_AudioDecoder from an SDL_IOStream.
	//
	//puregogen:function symbol=MIX_CreateAudioDecoder_IO
	iCreateAudioDecoder_IO func(io *sdl.IOStream, closeio bool, props sdl.PropertiesID) *AudioDecoder

	// MIX_DestroyAudioDecoder => Destroy the specified audio decoder.
	//
	//puregogen:function symbol=MIX_DestroyAudioDecoder
	iDestroyAudioDecoder func(audiodecoder *AudioDecoder)

	// MIX_GetAudioDecoderProperties => Get the properties associated with a MIX_AudioDecoder.
	//
	//puregogen:function symbol=MIX_GetAudioDecoderProperties
	iGetAudioDecoderProperties func(audiodecoder *AudioDecoder) sdl.PropertiesID

	// MIX_GetAudioDecoderFormat => Query the initial audio format of a MIX_AudioDecoder.
	//
	//puregogen:function symbol=MIX_GetAudioDecoderFormat
	iGetAudioDecoderFormat func(audiodecoder *AudioDecoder, spec *sdl.AudioSpec) bool

	// MIX_DecodeAudio => Decode more audio from a MIX_AudioDecoder.
	//
	//puregogen:function symbol=MIX_DecodeAudio
	iDecodeAudio func(audiodecoder *AudioDecoder, buffer uintptr, buflen int32, spec *sdl.AudioSpec) int32
)
