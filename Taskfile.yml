version: '3'

tasks:
    tools:
        desc: Install required tools
        cmds:
            # Install purego-gen
            - go install github.com/Zyko0/purego-gen/cmd/purego-gen@latest
    
    gen-ffi:
        desc: Generate ffi.json files for SDL3 libraries
        cmds:
            # Generate ffi.json files
            - docker build ./.docker/ffi/ -t sdl3ffi
            - docker create --name tmp sdl3ffi
            - docker cp tmp:/sdl_ffi.json ./cmd/internal/assets/ffi/sdl.json
            - docker cp tmp:/ttf_ffi.json ./cmd/internal/assets/ffi/ttf.json
            - docker cp tmp:/mixer_ffi.json ./cmd/internal/assets/ffi/mixer.json
            - docker cp tmp:/image_ffi.json ./cmd/internal/assets/ffi/img.json
            - docker rm -f tmp
    
    extract-wiki:
        desc: Extract documentation annotations from SDL3 wiki repository
        cmds:
            # Extract SDL3 wiki annotations
            - docker build ./.docker/wiki-annotations/ -t sdl3wiki
            - docker create --name tmp sdl3wiki
            - docker cp tmp:/go/annotations.csv ./cmd/internal/assets/wiki/annotations.csv
            - docker rm -f tmp
    
    build-wasm-lib:
        desc: Build SDL3 library as a wasm binary file
        cmds:
            # Generate emscripten wasm binary file
            - docker build ./.docker/emscripten-build/ -t sdl3wasm
            - docker create --name tmp sdl3wasm
            - docker cp tmp:/_out ./out_test
            - docker rm -f tmp
    
    gen-bindings:
        desc: Generate Go bindings for a chosen SDL3 library
        deps: [tools, gen-ffi]
        requires:
            vars: [LIBRARY]
        vars:
            DIR: '{{.LIBRARY}}'
            INPUT:
                '{{.DIR}}/{{.LIBRARY}}_functions.gen.go'
            EXTRA:
                - '{{.DIR}}/{{.LIBRARY}}_structs.gen.go'
                - '{{.DIR}}/{{.LIBRARY}}_types.gen.go'
                - '{{.DIR}}/{{.LIBRARY}}_enums.gen.go'
                - '{{.DIR}}/glue.go'
        cmds:
            # Generate SDL3 bindings 
            - go run ./cmd/ffi2go --config "cmd/internal/assets/config/{{.LIBRARY}}.json" --ffi "cmd/internal/assets/ffi/{{.LIBRARY}}.json"
            - purego-gen --no-warnings --function-name "initialize" --input {{.INPUT}} --extra {{.EXTRA | join ","}}
            - '{{if regexMatch .LIBRARY "sdl|ttf"}}purego-gen --no-library-handle --no-warnings --function-name "initialize_ex" --input {{.DIR}}/{{.LIBRARY}}_functions_ex.go --extra {{.EXTRA | join ","}}{{end}}'

    gen-methods:
        desc: Generate methods for SDL3 library (first pass)
        requires:
          vars: [LIBRARY]
        vars:
            DIR: '{{.LIBRARY}}'
        cmds:
            # Generate SDL3 methods heuristically as a starting point
            - go run ./cmd/methodgen --dir {{ .DIR }} --library {{ .LIBRARY }}
    
    gen-doc:
        deps: [extract-wiki]
        desc: Generate documentation for functions and types of the chosen SDL3 library
        requires:
          vars: [LIBRARY]
        vars:
            DIR: '{{.LIBRARY}}'
        cmds:
            # Generate SDL3 documentation on top of functions and types
            - go run ./cmd/docgen --config "cmd/internal/assets/config/{{.LIBRARY}}.json" --dir {{ .DIR }} --annotations "cmd/internal/assets/wiki/annotations.csv"

    coverage:
        desc: Update the COVERAGE.md file with functions covered by the bindings for SDL3 libraries
        vars:
            LIBS: [sdl, ttf, img, mixer]
        cmds:
            - for:
                var: LIBS
              cmd: go run ./cmd/coverage --config "cmd/internal/assets/config/{{.ITEM}}.json" --dir {{.ITEM}}
    
    fmt:
        desc: Format go code
        cmds:
            # go fmt code
            - gofmt -s -w .