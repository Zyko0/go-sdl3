//go:build windows || unix

package sdl

import (
	puregogen "github.com/Zyko0/purego-gen"
	purego "github.com/ebitengine/purego"
	"runtime"
	"unsafe"
)

// File generated by github.com/Zyko0/purego-gen. DO NOT EDIT.

var (
	// Symbols
	// sdl
	_addr_SDL_ShowMessageBox           uintptr
	_addr_SDL_CreateGPUShader          uintptr
	_addr_SDL_CreateGPUComputePipeline uintptr
	_addr_SDL_SetClipboardData         uintptr
)

func initialize_ex() {
	var err error

	// Symbols sdl
	_addr_SDL_ShowMessageBox, err = puregogen.OpenSymbol(_hnd_sdl, "SDL_ShowMessageBox")
	if err != nil {
		panic("cannot puregogen.OpenSymbol: SDL_ShowMessageBox")
	}
	_addr_SDL_CreateGPUShader, err = puregogen.OpenSymbol(_hnd_sdl, "SDL_CreateGPUShader")
	if err != nil {
		panic("cannot puregogen.OpenSymbol: SDL_CreateGPUShader")
	}
	_addr_SDL_CreateGPUComputePipeline, err = puregogen.OpenSymbol(_hnd_sdl, "SDL_CreateGPUComputePipeline")
	if err != nil {
		panic("cannot puregogen.OpenSymbol: SDL_CreateGPUComputePipeline")
	}
	_addr_SDL_SetClipboardData, err = puregogen.OpenSymbol(_hnd_sdl, "SDL_SetClipboardData")
	if err != nil {
		panic("cannot puregogen.OpenSymbol: SDL_SetClipboardData")
	}

	iShowMessageBox = func(data *messageBoxData, buttonid *int32) bool {
		_r0, _, _ := purego.SyscallN(_addr_SDL_ShowMessageBox, uintptr(unsafe.Pointer(data)), uintptr(unsafe.Pointer(buttonid)))
		__r0 := uint8(_r0) != 0
		runtime.KeepAlive(data)
		runtime.KeepAlive(buttonid)
		return __r0
	}
	iCreateGPUShader = func(device *GPUDevice, createinfo *gpuShaderCreateInfo) *GPUShader {
		_r0, _, _ := purego.SyscallN(_addr_SDL_CreateGPUShader, uintptr(unsafe.Pointer(device)), uintptr(unsafe.Pointer(createinfo)))
		__r0 := (*GPUShader)(*(*unsafe.Pointer)(unsafe.Pointer(&_r0)))
		runtime.KeepAlive(device)
		runtime.KeepAlive(createinfo)
		return __r0
	}
	iCreateGPUComputePipeline = func(device *GPUDevice, createinfo *gpuComputePipelineCreateInfo) *GPUComputePipeline {
		_r0, _, _ := purego.SyscallN(_addr_SDL_CreateGPUComputePipeline, uintptr(unsafe.Pointer(device)), uintptr(unsafe.Pointer(createinfo)))
		__r0 := (*GPUComputePipeline)(*(*unsafe.Pointer)(unsafe.Pointer(&_r0)))
		runtime.KeepAlive(device)
		runtime.KeepAlive(createinfo)
		return __r0
	}
	iSetClipboardData = func(callback ClipboardDataCallback, cleanup ClipboardCleanupCallback, userdata uintptr, mime_types **byte, num_mime_types uintptr) bool {
		_r0, _, _ := purego.SyscallN(_addr_SDL_SetClipboardData, uintptr(callback), uintptr(cleanup), uintptr(userdata), uintptr(unsafe.Pointer(mime_types)), uintptr(num_mime_types))
		__r0 := uint8(_r0) != 0
		runtime.KeepAlive(mime_types)
		return __r0
	}
}
